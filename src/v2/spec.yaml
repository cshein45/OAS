openapi: 3.1.0
info:
  title: Farcaster API V2
  version: "2.20.0"
  description: >
    The Farcaster API allows you to interact with the Farcaster protocol.
    See the [Neynar docs](https://docs.neynar.com/reference) for more details.
  contact:
    name: Neynar
    url: https://neynar.com/
    email: team@neynar.com
servers:
  - url: https://api.neynar.com/v2

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: "API key to authorize requests"
      x-default: "NEYNAR_API_DOCS"
  parameters:
    NeynarExperimentalHeader:
      name: x-neynar-experimental
      in: header
      description: "Experimental features flag"
      required: false
      schema:
        type: string
  responses:
    401Response:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    404Response:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    400Response:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    400ZodResponse:
      description: Bad Request (Zod Validation Error)
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ZodError"
    403Response:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    409Response:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConflictErrorRes"
    500Response:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
  schemas:
    # Common schemas
    Address:
      type: string
      pattern: "^0x[a-fA-F0-9]{40}$"
      example: "0x91031dcfdea024b4d51e775486111d2b2a715871"
    SolAddress:
      type: string
      pattern: "^[1-9A-HJ-NP-Za-km-z]{32,44}$"
      example: "2rnHFGPLBKPrJnEkMiWNgMYexN2LQpZ8eLxNMgsa2UQ3"
    Fid:
      type: integer
      format: int32
      example: 2
    ChannelId:
      type: string
      example: "neynar"
    SignerUUID:
      type: string
      format: uuid
      example: "c6fa374a-5a4a-4deb-9376-0b1d730e3e53"
    Timestamp:
      type: string
      format: date-time
      example: "2023-01-01T00:00:00.000Z"
    Ed25519PublicKey:
      type: string
      example: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
    NextCursor:
      type: string
      nullable: true
      example: "eyJpZCI6MTIzNDV9"
    
    # Error schemas
    ErrorRes:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    ConflictErrorRes:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        conflicts:
          type: array
          items:
            type: object
            properties:
              fid:
                $ref: "#/components/schemas/Fid"
              username:
                type: string
    ZodError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              path:
                type: array
                items:
                  type: string
    
    # User schemas
    User:
      type: object
      properties:
        fid:
          $ref: "#/components/schemas/Fid"
        username:
          type: string
          nullable: true
        display_name:
          type: string
          nullable: true
        pfp_url:
          type: string
          format: uri
          nullable: true
        profile:
          type: object
          properties:
            bio:
              type: object
              properties:
                text:
                  type: string
                  nullable: true
                mentioned_profiles:
                  type: array
                  items:
                    $ref: "#/components/schemas/User"
        follower_count:
          type: integer
        following_count:
          type: integer
        verifications:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        active_status:
          type: string
          enum:
            - active
            - inactive
        custody_address:
          $ref: "#/components/schemas/Address"
        viewer_context:
          type: object
          nullable: true
          properties:
            following:
              type: boolean
              nullable: true
            followed_by:
              type: boolean
              nullable: true
    UserFIDResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/User"
    
    # Cast schemas
    Cast:
      type: object
      properties:
        hash:
          type: string
        thread_hash:
          type: string
        parent_hash:
          type: string
          nullable: true
        parent_url:
          type: string
          format: uri
          nullable: true
        parent_author:
          $ref: "#/components/schemas/User"
          nullable: true
        author:
          $ref: "#/components/schemas/User"
        text:
          type: string
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        embeds:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              cast_id:
                type: object
                properties:
                  fid:
                    $ref: "#/components/schemas/Fid"
                  hash:
                    type: string
        reactions:
          type: object
          properties:
            likes:
              type: object
              properties:
                count:
                  type: integer
                self:
                  type: boolean
            recasts:
              type: object
              properties:
                count:
                  type: integer
                self:
                  type: boolean
        replies:
          type: object
          properties:
            count:
              type: integer
        mentioned_profiles:
          type: array
          items:
            $ref: "#/components/schemas/User"
    CastParamType:
      type: string
      enum:
        - hash
        - url
    ReplyDepth:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 52
        - 53
        - 54
        - 55
        - 56
        - 57
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 66
        - 67
        - 68
        - 69
        - 70
        - 71
        - 72
        - 73
        - 74
        - 75
        - 76
        - 77
        - 78
        - 79
        - 80
        - 81
        - 82
        - 83
        - 84
        - 85
        - 86
        - 87
        - 88
        - 89
        - 90
        - 91
        - 92
        - 93
        - 94
        - 95
        - 96
        - 97
        - 98
        - 99
        - 100
    CastConversationSortType:
      type: string
      enum:
        - relevance
        - chrono
    CastConversationResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            casts:
              type: array
              items:
                $ref: "#/components/schemas/Cast"
            next_cursor:
              $ref: "#/components/schemas/NextCursor"
    
    # Feed schemas
    FeedTrendingProvider:
      type: string
      enum:
        - neynar
        - farcaster
    FeedResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            feed:
              type: array
              items:
                $ref: "#/components/schemas/Cast"
            next_cursor:
              $ref: "#/components/schemas/NextCursor"
    
    # Reaction schemas
    ReactionType:
      type: string
      enum:
        - like
        - recast
    ReactionsType:
      type: string
      enum:
        - likes
        - recasts
        - all
    ReactionsResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            reactions:
              type: array
              items:
                $ref: "#/components/schemas/Reaction"
            next_cursor:
              $ref: "#/components/schemas/NextCursor"
    Reaction:
      type: object
      properties:
        reaction_type:
          $ref: "#/components/schemas/ReactionType"
        hash:
          type: string
        cast_hash:
          type: string
        reactor:
          $ref: "#/components/schemas/User"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
    
    # Channel schemas
    Channel:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ChannelId"
        name:
          type: string
        description:
          type: string
        image_url:
          type: string
          format: uri
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"
        lead_fid:
          $ref: "#/components/schemas/Fid"
        parent_url:
          type: string
          format: uri
        viewer_context:
          type: object
          properties:
            following:
              type: boolean
    ChannelResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            channel:
              $ref: "#/components/schemas/Channel"
    
    # Frame schemas
    Frame:
      type: object
      properties:
        version:
          type: string
        image:
          type: string
          format: uri
        buttons:
          type: array
          items:
            $ref: "#/components/schemas/FrameButton"
        post_url:
          type: string
          format: uri
    FrameButton:
      type: object
      properties:
        index:
          type: integer
        title:
          type: string
        action:
          type: string
          enum:
            - post
            - post_redirect
            - link
            - mint
    ValidateFrameReqBody:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
          example: "https://fcpolls.com/polls/1"
    ValidateFrameResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            valid:
              type: boolean
            errors:
              type: array
              items:
                type: string
            frame:
              $ref: "#/components/schemas/Frame"
    
    # Signer schemas
    Signer:
      type: object
      properties:
        signer_uuid:
          $ref: "#/components/schemas/SignerUUID"
        public_key:
          $ref: "#/components/schemas/Ed25519PublicKey"
        status:
          type: string
          enum:
            - approved
            - pending_approval
            - revoked
        signer_approval:
          type: object
          properties:
            deadline:
              $ref: "#/components/schemas/Timestamp"
            signature:
              type: string
        user:
          $ref: "#/components/schemas/User"

tags:
  - name: User
    description: Operations related to user
    externalDocs:
      description: More info about user
      url: https://docs.neynar.com/reference/user-operations
  - name: Signer
    description: Operations related to signer
    externalDocs:
      description: More info about signer
      url: https://docs.neynar.com/reference/signer-operations
  - name: Cast
    description: Operations related to cast
    externalDocs:
      description: More info about cast
      url: https://docs.neynar.com/reference/cast-operations
  - name: Feed
    description: Operations related to feed
    externalDocs:
      description: More info about feed
      url: https://docs.neynar.com/reference/feed-operations
  - name: Reaction
    description: Operations related to reaction
    externalDocs:
      description: More info about reaction
      url: https://docs.neynar.com/reference/reaction-operations
  - name: Channel
    description: Operations related to channels
    externalDocs:
      description: More info about channels
      url: https://docs.neynar.com/reference/channel-operations
  - name: Frame
    description: Operations related to frames
  - name: Webhook
    description: Operations related to webhooks
  - name: Notification
    description: Operations related to notifications
  - name: Action
    description: Operations related to actions
  - name: Follows
    description: Operations related to follows
  - name: Block
    description: Operations related to blocks
  - name: Mute
    description: Operations related to mutes
  - name: Ban
    description: Operations related to bans
  - name: Storage
    description: Operations related to storage
  - name: Metrics
    description: Operations related to metrics
  - name: Login
    description: Operations related to login
  - name: Onchain
    description: Operations related to onchain events
  - name: Subscribers
    description: Operations related to subscribers
  - name: Agents
    description: Operations related to agents
  - name: fname
    description: Operations related to fnames

paths:
  /farcaster/user/fid:
    get:
      operationId: getUserByFid
      summary: Get user by FID
      description: Get a user by their FID
      tags:
        - User
      parameters:
        - name: fid
          in: query
          description: FID of the user
          required: true
          schema:
            $ref: "#/components/schemas/Fid"
        - name: viewer_fid
          in: query
          description: FID of the viewer
          required: false
          schema:
            $ref: "#/components/schemas/Fid"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFIDResponse"
        "400":
          $ref: "#/components/responses/400Response"
        "401":
          $ref: "#/components/responses/401Response"
        "404":
          $ref: "#/components/responses/404Response"
        "500":
          $ref: "#/components/responses/500Response"
  
  /farcaster/signer/status:
    get:
      operationId: getSignerStatus
      summary: Get signer status
      description: Get the status of a signer
      tags:
        - Signer
      parameters:
        - name: signer_uuid
          in: query
          description: UUID of the signer
          required: true
          schema:
            $ref: "#/components/schemas/SignerUUID"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      signer:
                        $ref: "#/components/schemas/Signer"
        "400":
          $ref: "#/components/responses/400Response"
        "401":
          $ref: "#/components/responses/401Response"
        "404":
          $ref: "#/components/responses/404Response"
        "500":
          $ref: "#/components/responses/500Response"
  
  /farcaster/cast/conversation:
    get:
      operationId: getCastConversation
      summary: Get cast conversation
      description: Get a conversation for a cast
      tags:
        - Cast
      parameters:
        - name: type
          in: query
          description: Type of the cast parameter
          required: true
          schema:
            $ref: "#/components/schemas/CastParamType"
        - name: identifier
          in: query
          description: Cast hash or URL
          required: true
          schema:
            type: string
        - name: reply_depth
          in: query
          description: Depth of replies to fetch
          required: false
          schema:
            $ref: "#/components/schemas/ReplyDepth"
          x-is-limit-param: true
          x-default: 20
          x-max: 100
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
          x-is-limit-param: true
          x-default: 25
          x-max: 100
        - name: cursor
          in: query
          description: Cursor for pagination
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort order for the conversation
          required: false
          schema:
            $ref: "#/components/schemas/CastConversationSortType"
          x-default: "relevance"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CastConversationResponse"
        "400":
          $ref: "#/components/responses/400Response"
        "401":
          $ref: "#/components/responses/401Response"
        "404":
          $ref: "#/components/responses/404Response"
        "500":
          $ref: "#/components/responses/500Response"
  
  /farcaster/feed/trending:
    get:
      operationId: getTrendingFeed
      summary: Get trending feed
      description: Get the trending feed
      tags:
        - Feed
      parameters:
        - name: provider
          in: query
          description: Provider for the trending feed
          required: false
          schema:
            $ref: "#/components/schemas/FeedTrendingProvider"
          x-default: "neynar"
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
          x-is-limit-param: true
          x-default: 25
          x-max: 100
        - name: cursor
          in: query
          description: Cursor for pagination
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedResponse"
        "400":
          $ref: "#/components/responses/400Response"
        "401":
          $ref: "#/components/responses/401Response"
        "500":
          $ref: "#/components/responses/500Response"
  
  /farcaster/reactions:
    get:
      operationId: getReactions
      summary: Get reactions
      description: Get reactions for a cast
      tags:
        - Reaction
      parameters:
        - name: type
          in: query
          description: Type of reactions to fetch
          required: true
          schema:
            $ref: "#/components/schemas/ReactionsType"
        - name: cast_hash
          in: query
          description: Hash of the cast
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
          x-is-limit-param: true
          x-default: 25
          x-max: 100
        - name: cursor
          in: query
          description: Cursor for pagination
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReactionsResponse"
        "400":
          $ref: "#/components/responses/400Response"
        "401":
          $ref: "#/components/responses/401Response"
        "404":
          $ref: "#/components/responses/404Response"
        "500":
          $ref: "#/components/responses/500Response"
  
  /farcaster/channel:
    get:
      operationId: getChannel
      summary: Get channel
      description: Get a channel by ID
      tags:
        - Channel
      parameters:
        - name: id
          in: query
          description: ID of the channel
          required: true
          schema:
            $ref: "#/components/schemas/ChannelId"
        - name: viewer_fid
          in: query
          description: FID of the viewer
          required: false
          schema:
            $ref: "#/components/schemas/Fid"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelResponse"
        "400":
          $ref: "#/components/responses/400Response"
        "401":
          $ref: "#/components/responses/401Response"
        "404":
          $ref: "#/components/responses/404Response"
        "500":
          $ref: "#/components/responses/500Response"
  
  /farcaster/frame/validate:
    post:
      operationId: validateFrame
      summary: Validate frame
      description: Validate a frame URL
      tags:
        - Frame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateFrameReqBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateFrameResponse"
        "400":
          $ref: "#/components/responses/400Response"
        "401":
          $ref: "#/components/responses/401Response"
        "500":
          $ref: "#/components/responses/500Response"
